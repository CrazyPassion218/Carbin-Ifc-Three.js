{"version":3,"file":"IFCLoader.js","sources":["../src/IFC/BaseDefinitions.ts","../src/IFC/Shaders.ts","../src/IFC/IFCParser.ts","../src/IFC/DisplayManager.ts","../src/IFC/ItemPicker.ts","../src/IFC/PropertyManager.ts","../src/IFC/IFCManager.ts","../src/IFCLoader.ts"],"sourcesContent":["import { BufferGeometry, Material, Mesh } from \"three\";\r\n\r\nexport const VertexProps = {\r\n    r: \"red\",\r\n    g: \"green\",\r\n    b: \"blue\",\r\n    a: \"alfa\",\r\n    h: \"highlighted\"\r\n}\r\n\r\nexport interface Display {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    h: 0 | 1;\r\n}\r\n\r\nexport interface TransparentMesh extends Mesh {\r\n    transparentMesh: Mesh;\r\n}\r\n\r\nexport type GeometryByMaterial = {\r\n    material: Material;\r\n    geometry: BufferGeometry[];\r\n    indices: {[keys: number]: number};\r\n    lastIndex: number;\r\n};\r\n\r\nexport interface GeometriesByMaterial {\r\n    [key: string]: GeometryByMaterial\r\n}\r\n\r\nexport type MapFaceIndexID = { [key: number]: number };\r\nexport type MapIDFaceIndex = { [key: number]: number[] };","import { Shader } from 'three';\r\nimport { VertexProps } from './BaseDefinitions';\r\n\r\nexport function OpaqueShader(shader: Shader) {\r\n    shader.vertexShader = getVertexShader(shader);\r\n    shader.fragmentShader = getFragmentShader(shader, opaque);\r\n}\r\n\r\nexport function TransparentShader(shader: Shader) {\r\n    shader.vertexShader = getVertexShader(shader);\r\n    shader.fragmentShader = getFragmentShader(shader, transparent);\r\n}\r\n\r\ninterface ShaderConfig {\r\n  before: string;\r\n  after: string;\r\n}\r\n\r\nconst opaque: ShaderConfig = {\r\n    before: `vec4 diffuseColor = vec4( diffuse, opacity );`,\r\n    after: `vec4 diffuseColor = vec4( diffuse, opacity );\r\n  if(vh > 0.){\r\n    if (va <= 0.99) discard;\r\n    else diffuseColor = vec4( vr, vg, vb, opacity );\r\n  }`\r\n};\r\n\r\nconst transparent: ShaderConfig = {\r\n    before: `\tvec4 diffuseColor = vec4( diffuse, opacity );`,\r\n    after: `vec4 diffuseColor = vec4( diffuse, opacity );\r\n            if(vh > 0.0){\r\n            if (va == 0.0) discard;\r\n            diffuseColor = vec4( vr, vg, vb, va );\r\n            } else discard;`\r\n};\r\n\r\nfunction getFragmentShader(shader: Shader, config: ShaderConfig) {\r\n    return `\r\n  varying float vr;\r\n  varying float vg;\r\n  varying float vb;\r\n  varying float va;\r\n  varying float vh;\r\n${shader.fragmentShader}`.replace(config.before, config.after);\r\n}\r\n\r\nfunction getVertexShader(shader: Shader) {\r\n    return `\r\n  attribute float sizes;\r\n  attribute float ${VertexProps.r};\r\n  attribute float ${VertexProps.g};\r\n  attribute float ${VertexProps.b};\r\n  attribute float ${VertexProps.a};\r\n  attribute float ${VertexProps.h};\r\n  varying float vr;\r\n  varying float vg;\r\n  varying float vb;\r\n  varying float va;\r\n  varying float vh;\r\n${shader.vertexShader}`.replace(\r\n    `#include <fog_vertex>`,\r\n    `#include <fog_vertex>\r\n    vr = ${VertexProps.r};\r\n    vg = ${VertexProps.g};\r\n    vb = ${VertexProps.b};\r\n    va = ${VertexProps.a};\r\n    vh = ${VertexProps.h};`\r\n  );\r\n}\r\n","import { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport { OpaqueShader } from './Shaders';\r\nimport { IfcAPI, PlacedGeometry, Color as ifcColor } from 'web-ifc';\r\nimport {\r\n    Mesh,\r\n    Color,\r\n    MeshLambertMaterial,\r\n    DoubleSide,\r\n    Matrix4,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Material\r\n} from 'three';\r\nimport {\r\n    GeometriesByMaterial,\r\n    MapFaceIndexID,\r\n    MapIDFaceIndex\r\n} from './BaseDefinitions';\r\n\r\nexport class IFCParser {\r\n    private modelID: number;\r\n    private ifcAPI: IfcAPI;\r\n    private mapFaceindexID: MapFaceIndexID;\r\n    private mapIDFaceindex: MapIDFaceIndex;\r\n    private geometryByMaterials: GeometriesByMaterial;\r\n\r\n    constructor(ifcAPI: IfcAPI, mapFaceindexID: MapFaceIndexID, mapIDFaceindex: MapIDFaceIndex) {\r\n        this.modelID = -1;\r\n        this.mapFaceindexID = mapFaceindexID;\r\n        this.mapIDFaceindex = mapIDFaceindex;\r\n        this.geometryByMaterials = {};\r\n        this.ifcAPI = ifcAPI;\r\n    }\r\n\r\n    async parse(buffer: any) {\r\n        if (this.ifcAPI.wasmModule === undefined) {\r\n            await this.ifcAPI.Init();\r\n        }\r\n        const data = new Uint8Array(buffer);\r\n        this.modelID = this.ifcAPI.OpenModel(data);\r\n        return this.loadAllGeometry();\r\n    }\r\n\r\n    loadAllGeometry() {\r\n        this.saveAllPlacedGeometriesByMaterial();\r\n        return this.generateAllGeometriesByMaterial();\r\n    }\r\n\r\n    generateAllGeometriesByMaterial() {\r\n        const { materials, geometries } = this.getMaterialsAndGeometries();\r\n        const allGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries, true);\r\n        this.storeFaceindicesByExpressIDs();\r\n        return new Mesh(allGeometry, materials);\r\n    }\r\n\r\n    storeFaceindicesByExpressIDs() {\r\n        let previous = 0;\r\n\r\n        for (let index in this.mapFaceindexID) {\r\n            const current = parseInt(index);\r\n            const id = this.mapFaceindexID[current];\r\n\r\n            var faceIndices = [];\r\n            for (let j = previous; j < current; j++) {\r\n                faceIndices.push(j);\r\n            }\r\n\r\n            previous = current;\r\n\r\n            if (!this.mapIDFaceindex[id]) this.mapIDFaceindex[id] = [];\r\n            this.mapIDFaceindex[id].push(...faceIndices);\r\n        }\r\n    }\r\n\r\n    getMaterialsAndGeometries() {\r\n        const materials = [];\r\n        const geometries = [];\r\n        let totalFaceCount = 0;\r\n\r\n        for (let i in this.geometryByMaterials) {\r\n            materials.push(this.geometryByMaterials[i].material);\r\n            const currentGeometries = this.geometryByMaterials[i].geometry;\r\n            geometries.push(BufferGeometryUtils.mergeBufferGeometries(currentGeometries));\r\n\r\n            for (let j in this.geometryByMaterials[i].indices) {\r\n                const globalIndex = parseInt(j, 10) + totalFaceCount;\r\n                this.mapFaceindexID[globalIndex] = this.geometryByMaterials[i].indices[j];\r\n            }\r\n\r\n            totalFaceCount += this.geometryByMaterials[i].lastIndex;\r\n        }\r\n\r\n        return { materials, geometries };\r\n    }\r\n\r\n    saveAllPlacedGeometriesByMaterial() {\r\n        const flatMeshes = this.ifcAPI.LoadAllGeometry(this.modelID);\r\n\r\n        for (let i = 0; i < flatMeshes.size(); i++) {\r\n            const flatMesh = flatMeshes.get(i);\r\n            const productId = flatMesh.expressID;\r\n            const placedGeometries = flatMesh.geometries;\r\n\r\n            for (let j = 0; j < placedGeometries.size(); j++) {\r\n                this.savePlacedGeometryByMaterial(placedGeometries.get(j), productId);\r\n            }\r\n        }\r\n    }\r\n\r\n    savePlacedGeometryByMaterial(placedGeometry: PlacedGeometry, productId: number) {\r\n        const geometry = this.getBufferGeometry(placedGeometry);\r\n        geometry.computeVertexNormals();\r\n        const matrix = this.getMeshMatrix(placedGeometry.flatTransformation);\r\n        geometry.applyMatrix4(matrix);\r\n        this.saveGeometryByMaterial(geometry, placedGeometry, productId);\r\n    }\r\n\r\n    getBufferGeometry(placedGeometry: PlacedGeometry) {\r\n        const geometry = this.ifcAPI.GetGeometry(this.modelID, placedGeometry.geometryExpressID);\r\n        const verts = this.ifcAPI.GetVertexArray(\r\n            geometry.GetVertexData(),\r\n            geometry.GetVertexDataSize()\r\n        );\r\n        const indices = this.ifcAPI.GetIndexArray(\r\n            geometry.GetIndexData(),\r\n            geometry.GetIndexDataSize()\r\n        );\r\n        return this.ifcGeometryToBuffer(verts, indices);\r\n    }\r\n\r\n    getMeshMatrix(matrix: number[]) {\r\n        const mat = new Matrix4();\r\n        mat.fromArray(matrix);\r\n        return mat;\r\n    }\r\n\r\n    ifcGeometryToBuffer(vertexData: any, indexData: any) {\r\n        const geometry = new BufferGeometry();\r\n        const { vertices, normals } = this.extractVertexData(vertexData);\r\n        geometry.setAttribute('position', new BufferAttribute(new Float32Array(vertices), 3));\r\n        geometry.setAttribute('normal', new BufferAttribute(new Float32Array(normals), 3));\r\n        geometry.setIndex(new BufferAttribute(indexData, 1));\r\n        return geometry;\r\n    }\r\n\r\n    extractVertexData(vertexData: any) {\r\n        const vertices = [];\r\n        const normals = [];\r\n        let isNormalData = false;\r\n\r\n        for (let i = 0; i < vertexData.length; i++) {\r\n            isNormalData ? normals.push(vertexData[i]) : vertices.push(vertexData[i]);\r\n            if ((i + 1) % 3 == 0) isNormalData = !isNormalData;\r\n        }\r\n\r\n        return { vertices, normals };\r\n    }\r\n\r\n    saveGeometryByMaterial(geometry: BufferGeometry, placedGeometry: PlacedGeometry, productId: number) {\r\n        if(!geometry.index) return;\r\n        const color = placedGeometry.color;\r\n        const colorID = `${color.x}${color.y}${color.z}${color.w}`;\r\n        this.createMaterial(colorID, color);\r\n        const currentGeometry = this.geometryByMaterials[colorID];\r\n        currentGeometry.geometry.push(geometry);\r\n        currentGeometry.lastIndex += geometry.index.count / 3;\r\n        currentGeometry.indices[currentGeometry.lastIndex] = productId;\r\n    }\r\n\r\n    createMaterial(colorID: string, color: ifcColor) {\r\n        if (!this.geometryByMaterials[colorID]) {\r\n            const col = new Color(color.x, color.y, color.z);\r\n            const newMaterial = new MeshLambertMaterial({ color: col, side: DoubleSide });\r\n            newMaterial.onBeforeCompile = OpaqueShader;\r\n            newMaterial.transparent = color.w !== 1;\r\n            if (newMaterial.transparent) newMaterial.opacity = color.w;\r\n            this.geometryByMaterials[colorID] = this.newGeometryByMaterial(newMaterial);\r\n        }\r\n    }\r\n\r\n    newGeometryByMaterial(newMaterial: Material) {\r\n        return {\r\n            material: newMaterial,\r\n            geometry: [],\r\n            indices: {},\r\n            lastIndex: 0\r\n        };\r\n    }\r\n}\r\n","import { Display, MapIDFaceIndex, TransparentMesh, VertexProps } from './BaseDefinitions';\r\nimport { BufferAttribute, BufferGeometry, Material, Mesh, Scene } from 'three';\r\nimport { TransparentShader } from './Shaders';\r\n\r\nexport class DisplayManager {\r\n    private mapIDFaceindex: MapIDFaceIndex;\r\n\r\n    constructor(mapIDFaceindex: MapIDFaceIndex) {\r\n        this.mapIDFaceindex = mapIDFaceindex;\r\n    }\r\n\r\n    setItemsDisplay(ids: number[], mesh: Mesh, state: Display, scene: Scene) {\r\n        const geometry = mesh.geometry;\r\n        this.setupVisibility(geometry);\r\n\r\n        const faceIndicesArray = ids.map((id) => this.mapIDFaceindex[id]);\r\n        const faceIndices = ([] as number[]).concat(...faceIndicesArray);\r\n        faceIndices.forEach((faceIndex) => this.setFaceDisplay(geometry, faceIndex, state));\r\n\r\n        geometry.attributes[VertexProps.r].needsUpdate = true;\r\n        geometry.attributes[VertexProps.g].needsUpdate = true;\r\n        geometry.attributes[VertexProps.b].needsUpdate = true;\r\n        geometry.attributes[VertexProps.a].needsUpdate = true;\r\n        geometry.attributes[VertexProps.h].needsUpdate = true;\r\n\r\n        if (state.a != 1) this.setupTransparency(mesh as TransparentMesh, scene);\r\n    }\r\n\r\n    setFaceDisplay(geometry: BufferGeometry, index: number, state: Display) {\r\n        if (!geometry.index) return;\r\n        const geoIndex = geometry.index.array;\r\n        this.setFaceAttribute(geometry, VertexProps.r, state.r, index, geoIndex);\r\n        this.setFaceAttribute(geometry, VertexProps.g, state.g, index, geoIndex);\r\n        this.setFaceAttribute(geometry, VertexProps.b, state.b, index, geoIndex);\r\n        this.setFaceAttribute(geometry, VertexProps.a, state.a, index, geoIndex);\r\n        this.setFaceAttribute(geometry, VertexProps.h, state.h, index, geoIndex);\r\n    }\r\n\r\n    setFaceAttribute(\r\n        geometry: BufferGeometry,\r\n        attr: string,\r\n        state: number,\r\n        index: number,\r\n        geoIndex: ArrayLike<number>\r\n    ) {\r\n        geometry.attributes[attr].setX(geoIndex[3 * index], state);\r\n        geometry.attributes[attr].setX(geoIndex[3 * index + 1], state);\r\n        geometry.attributes[attr].setX(geoIndex[3 * index + 2], state);\r\n    }\r\n\r\n    setupVisibility(geometry: BufferGeometry) {\r\n        if (!geometry.attributes[VertexProps.r]) {\r\n            const zeros = new Float32Array(geometry.getAttribute('position').count);\r\n            geometry.setAttribute(VertexProps.r, new BufferAttribute(zeros.slice(), 1));\r\n            geometry.setAttribute(VertexProps.g, new BufferAttribute(zeros.slice(), 1));\r\n            geometry.setAttribute(VertexProps.b, new BufferAttribute(zeros.slice(), 1));\r\n            geometry.setAttribute(VertexProps.a, new BufferAttribute(zeros.slice().fill(1), 1));\r\n            geometry.setAttribute(VertexProps.h, new BufferAttribute(zeros, 1));\r\n        }\r\n    }\r\n\r\n    setupTransparency(mesh: TransparentMesh, scene: Scene) {\r\n        if (mesh.transparentMesh) return;\r\n        const transMesh = mesh.clone();\r\n\r\n        const transparentMaterials: Material[] = [];\r\n\r\n        if (Array.isArray(transMesh.material)) {\r\n            transMesh.material.forEach((mat) => {\r\n                transparentMaterials.push(this.newTransparent(mat));\r\n            });\r\n            transMesh.material = transparentMaterials;\r\n        } else {\r\n            transMesh.material = this.newTransparent(transMesh.material);\r\n        }\r\n\r\n        scene.add(transMesh);\r\n        mesh.transparentMesh = transMesh;\r\n    }\r\n\r\n    newTransparent(mat: Material) {\r\n        const newMat = mat.clone();\r\n        newMat.transparent = true;\r\n        // newMat.depthTest = false;\r\n        newMat.onBeforeCompile = TransparentShader;\r\n        return newMat;\r\n    }\r\n}\r\n","import { BufferGeometry, Intersection } from \"three\";\r\nimport { VertexProps } from \"./BaseDefinitions\";\r\nimport { DisplayManager } from \"./DisplayManager\";\r\n\r\nexport class ItemPicker {\r\n\r\n    private display: DisplayManager;\r\n\r\n    constructor(displayManager: DisplayManager){\r\n        this.display = displayManager;\r\n    }\r\n\r\n    pickItem(items: Intersection[], geometry: BufferGeometry, pickTransparent = true) {\r\n        if(!geometry.index) return;\r\n        this.display.setupVisibility(geometry);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const index = items[i].faceIndex;\r\n            if(!index) continue;\r\n            const trueIndex = geometry.index.array[index * 3];\r\n            const visible = geometry.getAttribute(VertexProps.a).array[trueIndex];\r\n            if (pickTransparent && visible != 0) return items[i];\r\n            else if (visible == 1) return items[i];\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","import { IfcAPI, IFCPROJECT, IFCRELAGGREGATES, IFCRELCONTAINEDINSPATIALSTRUCTURE, IFCRELDEFINESBYPROPERTIES, IFCRELDEFINESBYTYPE, } from \"web-ifc\";\r\nimport { MapFaceIndexID, MapIDFaceIndex } from \"./BaseDefinitions\";\r\n\r\nexport class PropertyManager {\r\n\r\n    private modelID: number;\r\n    private ifcAPI: IfcAPI;\r\n    private mapFaceindexID: MapFaceIndexID;\r\n    private mapIDFaceindex: MapIDFaceIndex;\r\n\r\n    constructor(modelID: number, ifcAPI: IfcAPI, mapFaceindexID: MapFaceIndexID, mapIDFaceindex: MapIDFaceIndex) {\r\n        this.modelID = modelID;\r\n        this.mapFaceindexID = mapFaceindexID;\r\n        this.mapIDFaceindex = mapIDFaceindex;\r\n        this.ifcAPI = ifcAPI;\r\n    }\r\n\r\n    getExpressId(faceIndex: Number) {\r\n        for (let index in this.mapFaceindexID) {\r\n            if (parseInt(index) > faceIndex) return this.mapFaceindexID[index];\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    getItemProperties(elementID: number, all = false, recursive = false) {\r\n        const properties = this.ifcAPI.GetLine(this.modelID, elementID, recursive);\r\n\r\n        if (all) {\r\n            const propSetIds = this.getAllRelatedItemsOfType(\r\n                elementID,\r\n                IFCRELDEFINESBYPROPERTIES,\r\n                'RelatedObjects',\r\n                'RelatingPropertyDefinition'\r\n            );\r\n            properties.hasPropertySets = propSetIds.map((id) =>\r\n                this.ifcAPI.GetLine(this.modelID, id, recursive)\r\n            );\r\n\r\n            const typeId = this.getAllRelatedItemsOfType(\r\n                elementID,\r\n                IFCRELDEFINESBYTYPE,\r\n                'RelatedObjects',\r\n                'RelatingType'\r\n            );\r\n            properties.hasType = typeId.map((id) =>\r\n                this.ifcAPI.GetLine(this.modelID, id, recursive)\r\n            );\r\n        }\r\n\r\n        // properties.type = properties.constructor.name;\r\n        return properties;\r\n    }\r\n\r\n    getSpatialStructure() {\r\n        let lines = this.ifcAPI.GetLineIDsWithType(this.modelID, IFCPROJECT);\r\n        let ifcProjectId = lines.get(0);\r\n        let ifcProject = this.ifcAPI.GetLine(this.modelID, ifcProjectId);\r\n        this.getAllSpatialChildren(ifcProject);\r\n        return ifcProject;\r\n    }\r\n\r\n    getAllSpatialChildren(spatialElement: any) {\r\n        const id = spatialElement.expressID;\r\n        const spatialChildrenID = this.getAllRelatedItemsOfType(\r\n            id,\r\n            IFCRELAGGREGATES,\r\n            'RelatingObject',\r\n            'RelatedObjects'\r\n        );\r\n        spatialElement.hasSpatialChildren = spatialChildrenID.map((id) =>\r\n            this.ifcAPI.GetLine(this.modelID, id, false)\r\n        );\r\n        spatialElement.hasChildren = this.getAllRelatedItemsOfType(\r\n            id,\r\n            IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n            'RelatingStructure',\r\n            'RelatedElements'\r\n        );\r\n        spatialElement.hasSpatialChildren.forEach((child : any) => this.getAllSpatialChildren(child));\r\n    }\r\n\r\n    getAllRelatedItemsOfType(elementID: number, type: any, relation: string, relatedProperty: string) {\r\n        const lines = this.ifcAPI.GetLineIDsWithType(this.modelID, type);\r\n        const IDs = [];\r\n\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const relID = lines.get(i);\r\n            const rel = this.ifcAPI.GetLine(this.modelID, relID);\r\n            const relatedItems = rel[relation];\r\n            let foundElement = false;\r\n\r\n            if (Array.isArray(relatedItems)) {\r\n                const values = relatedItems.map((item) => item.value);\r\n                foundElement = values.includes(elementID);\r\n            } else foundElement = relatedItems.value === elementID;\r\n\r\n            if (foundElement) {\r\n                const element = rel[relatedProperty];\r\n                if (!Array.isArray(element)) IDs.push(element.value);\r\n                else element.forEach((ele) => IDs.push(ele.value));\r\n            }\r\n        }\r\n        return IDs;\r\n    }\r\n\r\n}","import * as WebIFC from 'web-ifc';\r\nimport { IFCParser } from './IFCParser';\r\nimport { DisplayManager } from './DisplayManager';\r\nimport { ItemPicker } from './ItemPicker';\r\nimport { PropertyManager } from './PropertyManager';\r\nimport { Display, MapFaceIndexID, MapIDFaceIndex } from './BaseDefinitions';\r\nimport { BufferGeometry, Intersection, Mesh, Scene } from 'three';\r\n\r\nexport class IFCManager {\r\n\r\n    private modelID: number;\r\n    private ifcAPI: WebIFC.IfcAPI;\r\n    private mapFaceindexID: MapFaceIndexID;\r\n    private mapIDFaceindex: MapIDFaceIndex;\r\n    private parser: IFCParser;\r\n    private display: DisplayManager;\r\n    private properties: PropertyManager;\r\n    private picker: ItemPicker;\r\n\r\n    constructor() {\r\n        this.modelID = 0;\r\n        this.ifcAPI = new WebIFC.IfcAPI();\r\n        this.mapFaceindexID = {};\r\n        this.mapIDFaceindex = {};\r\n        this.parser = new IFCParser(this.ifcAPI, this.mapFaceindexID, this.mapIDFaceindex);\r\n        this.display = new DisplayManager(this.mapIDFaceindex);\r\n        this.properties = new PropertyManager(this.modelID, this.ifcAPI, this.mapFaceindexID, this.mapIDFaceindex);\r\n        this.picker = new ItemPicker(this.display);\r\n    }\r\n\r\n    parse(buffer: any) {\r\n        return this.parser.parse(buffer);\r\n    }\r\n\r\n    setWasmPath(path: string) {\r\n        this.ifcAPI.SetWasmPath(path);\r\n    }\r\n\r\n    pickItem(items: Intersection[], geometry: BufferGeometry, pickTransparent = true) {\r\n        return this.picker.pickItem(items, geometry, pickTransparent);\r\n    }\r\n\r\n    setItemsDisplay(items: number[], mesh: Mesh, state: Display, scene: Scene) {\r\n        this.display.setItemsDisplay(items, mesh, state, scene);\r\n    }\r\n\r\n    getExpressId(faceIndex: number) {\r\n        return this.properties.getExpressId(faceIndex);\r\n    }\r\n\r\n    getItemProperties(id: number, all = false, recursive = false) {\r\n        return this.properties.getItemProperties(id, all, recursive);\r\n    }\r\n\r\n    getSpatialStructure() {\r\n        return this.properties.getSpatialStructure();\r\n    }\r\n}\r\n","import { IFCManager } from './IFC/IFCManager';\r\nimport { BufferGeometry, FileLoader, Intersection, Loader, Mesh, Scene } from 'three';\r\nimport { Display } from './IFC/BaseDefinitions';\r\n\r\nclass IFCLoader extends Loader {\r\n    private ifcManager;\r\n\r\n    constructor(manager: any) {\r\n        super(manager);\r\n        this.ifcManager = new IFCManager();\r\n    }\r\n\r\n    load(url: any, onLoad: any, onProgress: any, onError: any) {\r\n        const scope = this;\r\n\r\n        const loader = new FileLoader(scope.manager);\r\n        loader.setPath(scope.path);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.setRequestHeader(scope.requestHeader);\r\n        loader.setWithCredentials(scope.withCredentials);\r\n        loader.load(\r\n            url,\r\n            async function (buffer) {\r\n                try {\r\n                    onLoad(await scope.parse(buffer));\r\n                } catch (e) {\r\n                    if (onError) {\r\n                        onError(e);\r\n                    } else {\r\n                        console.error(e);\r\n                    }\r\n\r\n                    scope.manager.itemError(url);\r\n                }\r\n            },\r\n            onProgress,\r\n            onError\r\n        );\r\n    }\r\n\r\n    parse(buffer: any) {\r\n        return this.ifcManager.parse(buffer);\r\n    }\r\n\r\n    setWasmPath(path: string) {\r\n        this.ifcManager.setWasmPath(path);\r\n    }\r\n\r\n    getExpressId(faceIndex: number) {\r\n        return this.ifcManager.getExpressId(faceIndex);\r\n    }\r\n\r\n    pickItem(items: Intersection[], geometry: BufferGeometry, transparent = true) {\r\n        return this.ifcManager.pickItem(items, geometry, transparent);\r\n    }\r\n\r\n    setItemsVisibility(ids: number[], mesh: Mesh, state: Display, scene: Scene) {\r\n        this.ifcManager.setItemsDisplay(ids, mesh, state, scene);\r\n    }\r\n\r\n    getItemProperties(id: number, all = false, recursive = false) {\r\n        return this.ifcManager.getItemProperties(id, all, recursive);\r\n    }\r\n\r\n    getSpatialStructure() {\r\n        return this.ifcManager.getSpatialStructure();\r\n    }\r\n}\r\n\r\nexport { IFCLoader };\r\n"],"names":["WebIFC.IfcAPI"],"mappings":"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"}